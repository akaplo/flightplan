{"version":3,"sources":["UnderlyingValueModal.js","TextField.jsx","FrequenciesBox.jsx","RowEditor.jsx","computeFuncs.js","LowerBox.jsx","utils.js","Cell.jsx","UpperBox.jsx","ActionsBar.jsx","fileUtils.js","OriginDestinationRow.jsx","mockdata/pym_bid.js","themes.js","App.js","serviceWorker.js","index.js"],"names":["UnderlyingValueModal","handleClose","mainValue","title","underlyingValue","useState","mainVal","updateMainVal","underlyingVal","updateUnderlyingVal","Dialog","open","onClose","DialogTitle","id","DialogContent","autoFocus","margin","label","onChange","e","target","value","fullWidth","DialogActions","Button","onClick","color","TextField","defaultValue","editableFieldStyle","focused","onClickAway","onEnterPressed","onFocus","onTabPressed","unfocusedContent","unfocusedWrapperClass","unfocusedWrapperStyle","usesUnderlyingValue","val","setVal","ClickAwayListener","key","onKeyDown","keyCode","preventDefault","shiftKey","style","variant","className","boxKeys","DEP_WX","DEP_GND","DEP_CTAF","ENR_1","ENR_2","DEST_WX","DEST_CTAF","DEST_GND","OTHER","FrequenciesBox","frequencies","setFrequencies","focusedBox","setFocusedBox","gridRow","gridColumn","Object","values","filter","i","a","map","box","idx","t","RowEditor","moveRow","removeRow","rowIndex","rows","IconButton","disabled","length","sum","mappings","filteredValues","undefined","Math","round","reduce","accumulator","currentValue","curVal","Number","parseFloat","computeRowCellValues","headers","newRows","headerIndex","header","isComputed","row","computeVals","getValsForHeaders","otherHeaderVal","computeFromUnderlying","forEach","v","computeFrom","computeFunc","computeTotalCellValue","totalComputeFunc","lowerBoxHeaders","text","loc","sectionName","halfHeight","readOnly","LowerBox","checkpoints","legs","setCheckpoints","showRowEditor","onTextFieldSubmit","col","newCheckpoints","HalfHeightHeader","cellText","NormalHeightHeader","checkpt","h","colNum","rowNum","setFocusedCell","FormControl","Select","labelId","leg","MenuItem","name","substr","defaultProps","takeoffTimeEst","origin","destination","moveItemInArray","input","from","to","toReturn","splice","getDistance","lat1","lon1","lat2","lon2","radlat1","PI","radlat2","theta","radtheta","dist","sin","cos","acos","reverseCheckpointString","str","clockMappings","12","1","2","3","4","5","6","7","8","9","10","11","directionMappings","left","right","words","split","word","endsWith","entries","k","includes","replace","capHeading","heading","reverseLeg","newLeg","oldStart","oldEnd","reverseLegName","trueCourse","reverseFlightPlan","newFrequencies","freqObj","reverseFrequencies","fuelStartTakeoff","fuelExtra","reverse","l","fuelClimb","magCourse","magHdg","reverseLegs","c","checkPoint","legCount","description","reverseCheckpoint","calculateLowerBoxCellValues","Date","now","checkpointsWithCalculatedVals","rowIdx","totalMiles","upperBoxHeaders","find","random","distPtToPt","distRemaining","speed","groundSpeed","elapsedTime","timeElapsedEst","newArrivalTime","moment","add","format","Cell","console","log","valToDisplay","isHeading","toString","padStart","determineValue","height","shiftPressed","newCol","newRow","highlight","hasTotal","latlng","startOfLeg","endOfLeg","startLat","startLon","endLat","endLong","distance","groundV","UpperBox","cruiseAlt","cruiseKTAS","setLegs","setCruiseAlt","setCruiseKTAS","topRow","setValFunc","valHeader","underlyingValHeader","newLegs","JSON","parse","stringify","topRowHeader","display","justifyContent","width","colIdx","TwoCellsWithHeader","cell1Title","cell1Value","cell2Title","cell2Value","setCell1Value","setCell2Value","bottom","TimePicker","time","ActionsBar","addEmptyCheckpoint","addEmptyLeg","generateFile","showCheckpointEditor","checkpointEditorVisible","loadFakeData","loadFlightPlan","setActionBarVisible","inputFile","useRef","Tooltip","blob","filename","contentType","document","createEvent","createElement","download","href","window","URL","createObjectURL","dataset","downloadurl","join","initMouseEvent","dispatchEvent","error","downloadBlobAsFile","fileName","type","files","then","data","ref","current","click","prevHeight","body","scrollHeight","setTimeout","html2canvas","canvas","appendChild","scrollTo","behavior","top","OriginDestinationRow","setDestination","setOrigin","setTakeoffTimeAct","setTakeoffTimeEst","takeoffTimeAct","headerIdx","windHdg","windSpd","magVariance","windCrctAngle","fuelCruise","setHours","departureWx","departureCTAF","enroute1","enroute2","destinationWx","destinationCTAF","other","remarks","defaultLightTheme","createMuiTheme","overrides","MuiInputBase","cursor","backgroundColor","MuiInput","underline","content","emptyLeg","App","actionBarVisible","setShowRowEditor","ThemeProvider","theme","utils","MomentUtils","oldIndex","newIndex","oldLegs","index","slice","oldCheckpoints","f","oldFreqs","cruiseAltitude","notes","Blob","pymToBIDFakeData","oldVal","reversed","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.abec5197.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nconst UnderlyingValueModal = ({ handleClose, mainValue, title, underlyingValue }) => {\n  const [mainVal, updateMainVal] = useState(mainValue)\n  const [underlyingVal, updateUnderlyingVal] = useState(underlyingValue || '')\n\n  return (\n    <Dialog open={true} onClose={ () => handleClose(mainVal, underlyingVal) }>\n      <DialogTitle id=\"form-dialog-title\">Set Value For { title }</DialogTitle>\n      <DialogContent>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"name\"\n          label=\"Main Value\"\n          onChange={ (e) => updateMainVal(e.target.value)}\n          value={ mainVal }\n          fullWidth\n        />\n        <TextField\n          margin=\"dense\"\n          id=\"name\"\n          label=\"Underlying Value\"\n          onChange={ (e) => updateUnderlyingVal(e.target.value)}\n          fullWidth\n          value={ underlyingVal }\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={ () => handleClose(mainVal, underlyingVal) } color=\"primary\">\n                    Accept\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nUnderlyingValueModal.propTypes = {\n  handleClose: PropTypes.func,\n  mainValue: PropTypes.string,\n  title: PropTypes.string,\n  underlyingValue: PropTypes.string\n}\n\nexport default UnderlyingValueModal\n","import React, { Fragment, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { ClickAwayListener, TextField as MUITextField } from '@material-ui/core'\n\nconst TextField = ({\n  defaultValue,\n  editableFieldStyle,\n  focused,\n  onClickAway,\n  onEnterPressed,\n  onFocus,\n  onTabPressed,\n  unfocusedContent,\n  unfocusedWrapperClass,\n  unfocusedWrapperStyle,\n  usesUnderlyingValue\n}) => {\n  const [val, setVal] = useState(defaultValue)\n\n  return (\n    <Fragment>\n      {\n        focused &&\n                <ClickAwayListener onClickAway={ () => !usesUnderlyingValue && onClickAway(val) }>\n                  <MUITextField\n                    autoFocus\n                    color={ 'secondary' }\n                    key={ `textfield-${defaultValue}-${usesUnderlyingValue}` }\n                    onChange={ e => setVal(e.target.value) }\n                    onKeyDown={ (e) => {\n                      if (e.keyCode === 13) {\n                        onEnterPressed(val)\n                      } else if (e.keyCode === 9) {\n                        e.preventDefault()\n                        if (e.shiftKey) {\n                          onTabPressed(val, true)\n                        } else {\n                          onTabPressed(val, false)\n                        }\n                      }\n                    } }\n                    style={ editableFieldStyle }\n                    variant={ 'outlined' }\n                    defaultValue={ defaultValue }\n                  />\n                </ClickAwayListener>\n      }\n      {\n        !focused &&\n                <div\n                  className={ unfocusedWrapperClass || 'normalBorder centerText thickCell' }\n                  key={ `textfield-${defaultValue}-${usesUnderlyingValue}` }\n                  style={ unfocusedWrapperStyle }\n                  onClick={ onFocus }\n                >\n                  { unfocusedContent }\n                </div>\n      }\n    </Fragment>\n  )\n}\n\nTextField.propTypes = {\n  defaultValue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  focused: PropTypes.bool,\n  /** onClickAway(textFieldValue: string) */\n  onClickAway: PropTypes.func,\n  onEnterPressed: PropTypes.func,\n  onFocus: PropTypes.func,\n  /** onTabPressed(textFieldValue: string, shiftPressed: bool) */\n  onTabPressed: PropTypes.func,\n  /** object literal with CSS for the MUI text field when focused */\n  editableFieldStyle: PropTypes.object,\n  /** DOM node to render when not focused */\n  unfocusedContent: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n  /** classname for div wrapper around un-editable field when not focused */\n  unfocusedWrapperClass: PropTypes.string,\n  /** literal CSS for div wrapper around un-editable field when not focused */\n  unfocusedWrapperStyle: PropTypes.object,\n  usesUnderlyingValue: PropTypes.bool\n}\n\nexport default TextField\n","import React, { Fragment, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport './Plan.css'\nimport TextField from './TextField'\n\nexport const boxKeys = {\n  DEP_WX: 'departureWx',\n  DEP_GND: 'departureGnd',\n  DEP_CTAF: 'departureCTAF',\n  ENR_1: 'enroute1',\n  ENR_2: 'enroute2',\n  DEST_WX: 'destinationWx',\n  DEST_CTAF: 'destinationCTAF',\n  DEST_GND: 'destinationGnd',\n  OTHER: 'other'\n}\n\nconst FrequenciesBox = ({ frequencies, setFrequencies }) => {\n  const [focusedBox, setFocusedBox] = useState('')\n  return (\n    <Fragment>\n      <div className={ 'normalHeader thickBorder centerText boldText' } style={ { gridRow: 2, gridColumn: 'span 3 / 16' } }>\n                Frequencies\n      </div>\n      {\n        Object.values(boxKeys).filter((i, a) => a !== -1).map((box, idx) =>\n          <TextField\n            defaultValue={ frequencies[box] }\n            key={ `frequencies-${idx}` }\n            onClickAway={ (t) => {\n              setFocusedBox('')\n              frequencies[box] = t\n              setFrequencies(frequencies)\n            } }\n            onEnterPressed={ (t) => {\n              setFocusedBox('')\n              frequencies[box] = t\n              setFrequencies(frequencies)\n            } }\n            unfocusedWrapperClass={ 'topLeftText thickBorder thickCell' }\n            focused={ focusedBox === box }\n            editableFieldStyle={ { gridRow: idx + 3, gridColumn: 'span 3 / 16' } }\n            unfocusedWrapperStyle={ { gridRow: idx + 3, gridColumn: 'span 3 / 16' } }\n            onFocus={ () => setFocusedBox(box) }\n            unfocusedContent={\n              <Fragment>\n                { box }\n                <span className={ 'centerText normalText' }>{ frequencies[box] || '-----' }</span>\n              </Fragment>\n            }\n          />\n        )\n      }\n    </Fragment>\n  )\n}\n\nFrequenciesBox.propTypes = {\n  frequencies: PropTypes.shape({\n    departureWx: PropTypes.string,\n    departureGnd: PropTypes.string,\n    departureCTAF: PropTypes.string,\n    enroute1: PropTypes.string,\n    enroute2: PropTypes.string,\n    destinationWx: PropTypes.string,\n    destinationCTAF: PropTypes.string,\n    destinationGnd: PropTypes.string,\n    other: PropTypes.string\n  }),\n  setFrequencies: PropTypes.func\n}\n\nexport default FrequenciesBox\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp'\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown'\n\nconst RowEditor = ({ moveRow, removeRow, rowIndex, rows }) => {\n  return (\n    <div className={ 'flex' } style={ { gridRow: 3 + rowIndex } }>\n      <IconButton\n        disabled={ rows.length <= 1 }\n        color={ 'secondary' }\n        onClick={ () => removeRow(rowIndex) }\n      >\n        <DeleteIcon/>\n      </IconButton>\n      <IconButton\n        color={ 'default'}\n        disabled={ rowIndex === 0 }\n        onClick={ () => moveRow(rowIndex, rowIndex - 1) }\n      >\n        <KeyboardArrowUpIcon/>\n      </IconButton>\n      <IconButton\n        color={ 'primary' }\n        disabled={ rowIndex === rows.length - 1 }\n        onClick={ () => moveRow(rowIndex, rowIndex + 1) }\n      >\n        <KeyboardArrowDownIcon/>\n      </IconButton>\n    </div>\n  )\n}\n\nRowEditor.propTypes = {\n  moveRow: PropTypes.func,\n  removeRow: PropTypes.func,\n  rowIndex: PropTypes.func,\n  rows: PropTypes.arrayOf(PropTypes.object)\n}\n\nexport default RowEditor\n","/**\n * All functions get an input cellVals of this form:\n * [ { headerValue: cellValueToComputeWith}, { ... }, ...]\n *\n * Example for computing \"Fly Heading\":\n * { magHdg: 280, windCrctAngle: 2 }\n */\n\nimport { getDistance } from './utils'\n\n/**\n *\n */\nexport const sum = (mappings) => {\n  const filteredValues = Object.values(mappings).filter(val => val !== undefined && val !== null)\n\n  if (filteredValues.length > 0) {\n    return Math.round(filteredValues\n      .reduce((accumulator, currentValue) => {\n        const curVal = Number.parseFloat(currentValue) || 0\n        const prevVal = Number.parseFloat(accumulator) || 0\n        return prevVal + curVal\n      }) * 10) / 10\n  } else {\n    return 0\n  }\n}\n\n/** Requires [ { groundSpeed: <> }, { distance: <> } ] */\nexport const flightTime = (mappings) => {\n  const distance = Number.parseFloat(mappings.distance) || 0\n  const groundV = Number.parseFloat(mappings.groundSpeed) || 0\n  return Math.round(distance / groundV * 60) || 0\n}\n\nexport const distance = (mappings) => {\n  const [startOfLeg, endOfLeg] = mappings.latlng.split(':')\n  const [startLat, startLon] = startOfLeg.split(',')\n  const [endLat, endLong] = endOfLeg.split(',')\n\n  return Math.round(getDistance(\n    Number.parseFloat(startLat),\n    Number.parseFloat(startLon),\n    Number.parseFloat(endLat),\n    Number.parseFloat(endLong)\n  ))\n}\n\n/**\n * Computes the values of all cells in rows that rely on the values of other columns\n * @param headers\n * @param rows\n */\nexport const computeRowCellValues = (headers, rows) => {\n  const newRows = rows\n  for (let headerIndex = 0; headerIndex < headers.length; headerIndex++) {\n    const header = headers[headerIndex]\n    if (header.isComputed) {\n      for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n        const row = rows[rowIndex]\n        // Get the values of the operands we'll use to sum, then compute them\n        // ex: header.val = 'magHdg', computeFrom = ['magCourse', 'windCrctAngle']\n        // rows[0]['magCourse]] = 280, rows[1]['windCrctAngle'] = 2\n        // This reduces to a \"Fly Heading\" of 282.\n        const computeVals = {}\n        const getValsForHeaders = otherHeaderVal => {\n          computeVals[otherHeaderVal] = row[otherHeaderVal]\n        }\n        // If we should compute this cell from another cell's underlying (not displayed) value, attempt\n        // to do so.\n        if (header.computeFromUnderlying !== undefined) {\n          header.computeFromUnderlying.forEach(getValsForHeaders)\n          // If the other cell does not have any underlying values populated, just return displayed value.\n          if (Object.values(computeVals).filter(v => v !== null && v !== undefined && v !== '').length === 0) {\n            continue\n          }\n        } else {\n          header.computeFrom.forEach(getValsForHeaders)\n        }\n        newRows[rowIndex][header.val] = Object.values(computeVals).filter(v => !!v).length > 0\n          ? header.computeFunc(computeVals) : ''\n      }\n    }\n  }\n  return newRows\n}\n\n/**\n * Computes the values of a \"total\" cell\n * (like total flight time, which is the sum of all the cells in its column)\n */\nexport const computeTotalCellValue = (header, rows) => {\n  const computeVals = {}\n  rows.forEach((row, idx) => {\n    computeVals[idx] = Number.parseFloat(row[header.val]) || 0\n  })\n  return header.totalComputeFunc(computeVals)\n}\n","import React, { Fragment, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport './Plan.css'\nimport { HalfHeightHeader, NormalHeightHeader } from './UpperBox'\nimport Cell from './Cell'\nimport RowEditor from './RowEditor'\nimport FrequenciesBox from './FrequenciesBox'\nimport { sum } from './computeFuncs'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nexport const lowerBoxHeaders = [\n  { text: 'Checkpoints', loc: 'span 4 / 5', val: 'description' },\n  { text: 'Pt to Pt', loc: 5, val: 'distPtToPt', sectionName: 'Distance', halfHeight: true },\n  { text: 'Remaining', loc: 6, val: 'distRemaining', halfHeight: true, isComputed: true, computeFunc: sum, readOnly: true, defaultValue: '---' },\n  { text: 'Estimated', loc: 7, val: 'timeElapsedEst', sectionName: 'Elapsed Time', halfHeight: true, readOnly: true, defaultValue: '---' },\n  { text: 'Actual', loc: 8, val: 'timeElapsedAct', halfHeight: true },\n  { text: 'Estimated', loc: 9, val: 'timeArrivedEst', sectionName: 'Arrival Time', halfHeight: true, readOnly: true },\n  { text: 'Actual', loc: 10, val: 'timeArrivedAct', halfHeight: true },\n  { text: 'Remarks', loc: 'span 2 / 13', val: 'remarks' }\n]\n\nfunction LowerBox ({ checkpoints, className, frequencies, legs, moveRow, removeRow, setCheckpoints, setFrequencies, showRowEditor }) {\n  const [focusedBox, setFocusedBox] = useState('')\n  const onTextFieldSubmit = (val, col, row) => {\n    const newCheckpoints = checkpoints\n    newCheckpoints[row][col] = val\n    setCheckpoints(newCheckpoints)\n  }\n  return (\n    <div className={ `lowerBox${className ? ` ${className}` : ''}` }>\n      {\n        lowerBoxHeaders.map(header =>\n          <div key={ `checkpts-headers-${header.val}` } style={ { gridRow: 2, gridColumn: header.loc } }>\n            { header.halfHeight &&\n                            <HalfHeightHeader sectionName={ header.sectionName } cellText={ header.text } gridColumn={ 4 } gridRow={ 2 }/>\n            }\n            { !header.halfHeight &&\n                            <NormalHeightHeader text={ header.text } />\n            }\n          </div>\n        )\n      }\n      {\n        checkpoints.map((checkpt, row) =>\n          <Fragment key={ `checkpts-rows-${row}` }>\n            {\n              lowerBoxHeaders.map((h, col) =>\n                <Cell\n                  header={ h }\n                  colNum={ col }\n                  focused={ focusedBox === `${row}/${col}` }\n                  headers={ lowerBoxHeaders }\n                  key={ `checkpts-vals-${row}${col}` }\n                  onTextFieldSubmit={ onTextFieldSubmit }\n                  rowNum={ row }\n                  rows={ checkpoints }\n                  setFocusedCell={ setFocusedBox }\n                />\n              )\n            }\n            {\n              showRowEditor &&\n                                <RowEditor moveRow={ moveRow } removeRow={ removeRow } rowIndex={ row } rows={ checkpoints }/>\n            }\n            {\n              // Show a <Select/> with leg names. User should associate each checkpoint with a leg\n              // for accurate cell calculations.\n              showRowEditor &&\n                                <div className={ 'flex centerText' } style={ { gridRow: 3 + row } }>\n                                  <FormControl>\n                                    <Select\n                                      labelId=\"demo-simple-select-label\"\n                                      id=\"demo-simple-select\"\n                                      value={ checkpt.leg}\n                                      onChange={ e => onTextFieldSubmit(e.target.value, 'leg', row) }\n                                    >\n                                      {\n                                        legs.map((leg, idx) =>\n                                          <MenuItem\n                                            key={ `rowEditorLowerBox-${idx}` }\n                                            value={ idx }\n                                          >\n                                            { legs[idx].name?.substr(0, 20) || idx + 1 }\n                                          </MenuItem>\n                                        )\n                                      }\n                                    </Select>\n                                  </FormControl>\n                                </div>\n            }\n          </Fragment>\n        )\n      }\n      <FrequenciesBox frequencies={ frequencies } setFrequencies={ setFrequencies }/>\n    </div>\n  )\n}\n\nLowerBox.defaultProps = {\n  takeoffTimeEst: '12:30pm',\n  origin: 'Plymouth, MA (PYM)',\n  destination: 'BLock Island, RI (KBID)'\n}\n\nLowerBox.propTypes = {\n  checkpoints: PropTypes.arrayOf(PropTypes.object),\n  className: PropTypes.string,\n  frequencies: PropTypes.object, // see FrequenciesBox for shape details\n  legs: PropTypes.arrayOf(PropTypes.object),\n  moveRow: PropTypes.func,\n  removeRow: PropTypes.func,\n  setCheckpoints: PropTypes.func,\n  setFrequencies: PropTypes.func,\n  showRowEditor: PropTypes.bool\n}\n\nexport default LowerBox\n","import moment from 'moment'\nimport { boxKeys } from './FrequenciesBox'\nimport { lowerBoxHeaders } from './LowerBox'\nimport { computeTotalCellValue, sum } from './computeFuncs'\nimport { upperBoxHeaders } from './UpperBox'\n\nexport const moveItemInArray = (input, from, to) => {\n  const toReturn = input\n  toReturn.splice(to, 0, toReturn.splice(from, 1)[0])\n  return toReturn\n}\n\n/**\n *\n * @param lat1 {number}\n * @param lon1 {number}\n * @param lat2 {number}\n * @param lon2 {number}\n * @returns {number}\n */\nexport const getDistance = (lat1, lon1, lat2, lon2) => {\n  if ((lat1 === lat2) && (lon1 === lon2)) {\n    return 0\n  } else {\n    var radlat1 = Math.PI * lat1 / 180\n    var radlat2 = Math.PI * lat2 / 180\n    var theta = lon1 - lon2\n    var radtheta = Math.PI * theta / 180\n    var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta)\n    if (dist > 1) {\n      dist = 1\n    }\n    dist = Math.acos(dist)\n    dist = dist * 180 / Math.PI\n    dist = dist * 60 * 1.1515\n    dist = dist * 0.8684 // convert to nautical miles\n    return dist\n  }\n}\n\nexport const reverseCheckpointString = str => {\n  if (!str) {\n    return\n  }\n  let toReturn = str\n  const clockMappings = { 12: 6, 1: 7, 2: 8, 3: 9, 4: 10, 5: 11, 6: 12, 7: 1, 8: 2, 9: 3, 10: 4, 11: 5 }\n  const directionMappings = { left: 'right', right: 'left' }\n  const words = str.split(' ')\n  for (const word of words) {\n    // if it's direction on a clockface\n    if ((word.length === 3 || word.length === 4) && word.endsWith('pm')) {\n      // figure out which clock number it is and switch it with its inverse\n      for (const [k, v] of Object.entries(clockMappings)) {\n        if (word.includes(k)) {\n          toReturn = toReturn.replace(`${k}pm`, `${v}pm`)\n          break\n        }\n      }\n    }\n    // replace 'left' with right and vice versa\n    for (const [k, v] of Object.entries(directionMappings)) {\n      if (word === k) {\n        toReturn = toReturn.replace(k, v)\n        break\n      }\n    }\n  }\n  return toReturn\n}\n\nexport const reverseLegName = str => {\n  if (!str) {\n    return\n  }\n  let oldStart\n  let oldEnd\n  if (str.includes(' -> ')) {\n    [oldStart, oldEnd] = str.split(' -> ')\n  } else if (str.includes('->')) {\n    [oldStart, oldEnd] = str.split('->')\n  }\n  return `${oldEnd} -> ${oldStart}`\n}\n\nexport const capHeading = heading => {\n  if (heading > 360) {\n    return heading - 360\n  } else if (heading <= 0) {\n    return 360 + heading\n  }\n  return heading\n}\n\nconst reverseLeg = leg => {\n  const newLeg = { ...leg }\n  newLeg.name = newLeg.name ?? reverseLegName(leg.name)\n  newLeg.trueCourse = newLeg.trueCourse ?? capHeading(leg.trueCourse - 180)\n  return newLeg\n}\n\nconst reverseLegs = legs => {\n  const fuelStartTakeoff = legs[0]?.fuelStartTakeoff\n  const fuelExtra = legs[legs.length - 1]?.fuelExtra\n\n  return legs.reverse().map((l, idx) => ({\n    ...reverseLeg(l),\n    fuelStartTakeoff: idx === 0 ? fuelStartTakeoff : undefined,\n    fuelClimb: undefined,\n    fuelExtra: idx === legs.length - 1 ? fuelExtra : undefined,\n    magCourse: undefined,\n    magHdg: undefined\n  }))\n}\n\nconst reverseCheckpoint = (checkPoint, legCount) => {\n  return {\n    ...checkPoint,\n    description: checkPoint.description ?? reverseCheckpointString(checkPoint.description),\n    leg: legCount - (checkPoint.leg + 1)\n  }\n}\n\nconst reverseFrequencies = freqObj => ({\n  [boxKeys.DEP_WX]: freqObj[boxKeys.DEST_WX],\n  [boxKeys.DEP_GND]: freqObj[boxKeys.DEST_GND],\n  [boxKeys.DEP_CTAF]: freqObj[boxKeys.DEST_CTAF],\n  [boxKeys.DEST_WX]: freqObj[boxKeys.DEP_WX],\n  [boxKeys.DEST_CTAF]: freqObj[boxKeys.DEP_CTAF],\n  [boxKeys.DEST_GND]: freqObj[boxKeys.DEP_GND],\n  [boxKeys.OTHER]: freqObj[boxKeys.OTHER]\n})\n\nexport const reverseFlightPlan = (legs, checkpoints, frequencies, origin, destination) => {\n  const newFrequencies = reverseFrequencies(frequencies)\n  const newLegs = legs.length > 1 ? reverseLegs(legs) : legs\n  const newCheckpoints = checkpoints.length > 1 ? checkpoints.map(c => reverseCheckpoint(c, legs.length)).reverse() : checkpoints\n  return {\n    legs: newLegs,\n    checkpoints: newCheckpoints,\n    frequencies: newFrequencies,\n    origin: destination,\n    destination: origin\n  }\n}\n\nexport const calculateLowerBoxCellValues = (checkpoints, legs, takeoffTimeEst = Date.now()) => {\n  const checkpointsWithCalculatedVals = checkpoints\n\n  checkpoints.forEach((checkpt, rowIdx) => {\n    for (const header of lowerBoxHeaders) {\n      if (header.val === 'distRemaining') {\n        const totalMiles = computeTotalCellValue(upperBoxHeaders.find(h => h.val === 'distance'), legs)\n        const mappings = { totalMiles }\n        // Calculate distance remaining for this cell using all previous distances\n        for (let i = 0; i <= rowIdx; i++) {\n          mappings[Math.random()] = checkpoints[i].distPtToPt * -1\n        }\n        const distRemaining = sum(mappings)\n        if (distRemaining >= 0) {\n          checkpointsWithCalculatedVals[rowIdx][header.val] = distRemaining\n        } else if (distRemaining < 0) {\n          checkpointsWithCalculatedVals[rowIdx][header.val] = 'ERROR: < 0'\n        } else {\n          checkpointsWithCalculatedVals[rowIdx][header.val] = header.defaultValue\n        }\n      }\n      if (header.val === 'timeElapsedEst') {\n        const speed = legs[checkpt.leg].groundSpeed\n        checkpointsWithCalculatedVals[rowIdx][header.val] = Math.round(checkpt.distPtToPt / speed * 60)\n      }\n      if (header.val === 'timeArrivedEst') {\n        // For each checkpoint, calculate its estimated arrival time by adding its already-calculated\n        // elapsed time to the previous checkpoint's arrival time\n        for (let i = 0; i <= rowIdx; i++) {\n          let prevArrivalTime\n          const elapsedTime = checkpoints[rowIdx].timeElapsedEst\n          if (i === 0) {\n            prevArrivalTime = moment(takeoffTimeEst)\n          } else {\n            prevArrivalTime = moment(checkpointsWithCalculatedVals[i - 1][header.val], 'hh:mm')\n          }\n          const newArrivalTime = prevArrivalTime.add(elapsedTime, 'm')\n          checkpointsWithCalculatedVals[rowIdx][header.val] = newArrivalTime.format('hh:mm')\n        }\n      }\n    }\n  })\n  return checkpointsWithCalculatedVals\n}\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport './Plan.css'\nimport UnderlyingValueModal from './UnderlyingValueModal'\nimport TextField from './TextField'\nimport { capHeading } from './utils'\n\nexport const determineValue = (header, rows, rowNum) => {\n  let valToDisplay = ''\n  if (rowNum !== undefined) {\n    valToDisplay = rows[rowNum][header.val]\n  }\n  if ((valToDisplay === '' || valToDisplay === undefined) && header.defaultValue) {\n    valToDisplay = header.defaultValue\n  }\n  if (header.isHeading) {\n    valToDisplay = capHeading(rows[rowNum][header.val])?.toString()?.padStart(3, '0') || ''\n  }\n  return valToDisplay\n}\n\nconst Cell = ({ focused, rowNum, colNum, header, headers, setFocusedCell, onTextFieldSubmit, rows }) => {\n  if (typeof colNum === 'string') {\n    console.log(header, colNum)\n  }\n  const valToDisplay = determineValue(header, rows, rowNum)\n  return (\n    <Fragment>\n      {\n        <TextField\n          defaultValue={ rows[rowNum][header.val] }\n          editableFieldStyle={ { gridRow: 3 + rowNum, gridColumn: header.loc, height: 'auto' } }\n          focused={ focused }\n          key={ `${rowNum}${colNum}` }\n          onClickAway={ val => {\n            onTextFieldSubmit(val, header.val, rowNum)\n            setFocusedCell('')\n          } }\n          onEnterPressed={ val => {\n            onTextFieldSubmit(val, header.val, rowNum)\n            setFocusedCell('')\n          } }\n          onFocus={ () => !header.readOnly && setFocusedCell(`${rowNum}/${colNum}`) }\n          onTabPressed={ (val, shiftPressed) => {\n            onTextFieldSubmit(val, header.val, rowNum)\n            let newCol\n            let newRow = rowNum\n            if (shiftPressed) {\n              newCol = colNum === 0 ? headers.length - 1 : colNum - 1\n              // Reached beginning of row\n              if (newCol > colNum) {\n                // if this is the first row\n                if (rowNum === 0) {\n                  newRow = undefined\n                } else {\n                  newRow = rowNum - 1\n                }\n              }\n            } else {\n              newCol = colNum === headers.length - 1 ? 0 : colNum + 1\n              // Reached end of row\n              if (newCol < colNum) {\n                // if this is the last row\n                if (rowNum === rows.length - 1) {\n                  newRow = undefined\n                } else {\n                  newRow = rowNum + 1\n                }\n              }\n            }\n            setFocusedCell(newRow !== undefined ? `${newRow}/${newCol}` : '')\n          } }\n          unfocusedContent={\n            <Fragment>\n              { header.highlight && <mark>{ valToDisplay }</mark> }\n              { !header.highlight && valToDisplay }\n            </Fragment>\n          }\n          unfocusedWrapperClass={ `cell normalBorder centerText thickCell ${!header.readOnly ? 'cellHover' : 'readOnlyCell'}` }\n          unfocusedWrapperStyle={ { gridRow: 3 + rowNum, gridColumn: header.loc, height: 'auto' } }\n          usesUnderlyingValue={ header.underlyingValue !== undefined }\n        />\n      }\n      {\n        focused && header.underlyingValue !== undefined &&\n                <UnderlyingValueModal\n                  handleClose={ (mainVal, underlyingVal) => {\n                    setFocusedCell('')\n                    onTextFieldSubmit(mainVal, header.val, rowNum, underlyingVal, header.underlyingValue)\n                  } }\n                  mainValue={ rows[rowNum][header.val] }\n                  title={ header.text }\n                  underlyingValue={ rows[rowNum][header.underlyingValue] }\n                />\n      }\n    </Fragment>\n  )\n}\n\nCell.propTypes = {\n  focused: PropTypes.bool,\n  rowNum: PropTypes.number,\n  colNum: PropTypes.number,\n  header: PropTypes.shape({\n    /** The reduce function to call to compute this cell's value */\n    computeFunc: PropTypes.func,\n    defaultValue: PropTypes.string,\n    /** Whether this cell's value is computed from values of other cells in the current row */\n    isComputed: PropTypes.bool,\n    /** Whether to give the cell values for this header a yellow highlight */\n    highlight: PropTypes.bool,\n    /** Location in the horizontal axis of the grid the header should appear\n         * Example \"1 / 2\" (start at column 1, end at column 2). See gridColumn property of grids, MDN.\n         */\n    loc: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    /** Whether this cell can be edited by the user */\n    readOnly: PropTypes.bool,\n    /** The header.vals of OTHER headers to use when computing this cell's value. Only set if isComputed is true */\n    computeFrom: PropTypes.arrayOf(PropTypes.string),\n    /** Whether the header includes an underlying value */\n    underlyingValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    text: PropTypes.string,\n    /** The header's value, which is used to key into a row to get the data to display */\n    val: PropTypes.string\n  }),\n  headers: PropTypes.arrayOf(PropTypes.object),\n  setFocusedCell: PropTypes.func,\n  onTextFieldSubmit: PropTypes.func,\n  rows: PropTypes.arrayOf(PropTypes.object)\n}\n\nexport default Cell\n","import React, { Fragment, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport './Plan.css'\nimport Cell from './Cell'\nimport { computeTotalCellValue, distance, flightTime, sum } from './computeFuncs'\nimport RowEditor from './RowEditor'\nimport { TimePicker } from '@material-ui/pickers'\nimport TextField from './TextField'\nimport { capHeading } from './utils'\n\nexport const upperBoxHeaders = [\n  { defaultValue: '', text: 'Leg Name', loc: 'span 2 / 3', val: 'name', underlyingValue: 'latlng' },\n  { defaultValue: '', text: 'Hdg', loc: 3, halfHeight: true, sectionName: 'Wind', val: 'windHdg' },\n  { defaultValue: '', text: 'Spd', loc: 4, halfHeight: true, val: 'windSpd' },\n  { defaultValue: '', text: 'True Course', loc: 5, val: 'trueCourse', isHeading: true },\n  { defaultValue: '', text: '+w, -e', loc: 6, val: 'magVariance' },\n  { defaultValue: '', text: 'Mag Course', loc: 7, val: 'magCourse', readOnly: true, isComputed: true, computeFrom: ['trueCourse', 'magVariance'], computeFunc: sum, isHeading: true },\n  { defaultValue: '', text: '-L +R', loc: 8, val: 'windCrctAngle' },\n  { defaultValue: '', text: 'Fly Hdg', loc: 9, val: 'magHdg', highlight: true, readOnly: true, isComputed: true, computeFrom: ['magCourse', 'windCrctAngle'], computeFunc: sum, isHeading: true },\n  { defaultValue: '', text: 'Ground V', loc: 10, val: 'groundSpeed' },\n  { defaultValue: '', hasTotal: true, text: 'Miles', loc: 11, val: 'distance', isComputed: true, computeFromUnderlying: ['latlng'], computeFunc: distance, totalComputeFunc: sum },\n  { defaultValue: '', hasTotal: true, text: 'Time', loc: 12, val: 'time', highlight: true, readOnly: true, isComputed: true, computeFrom: ['groundSpeed', 'distance'], computeFunc: flightTime, totalComputeFunc: sum },\n  { defaultValue: '---', text: 'Start/Taxi/TkOff', loc: 13, halfHeight: true, sectionName: 'Fuel', val: 'fuelStartTakeoff' },\n  { defaultValue: '---', text: 'Climb', loc: 14, halfHeight: true, val: 'fuelClimb' },\n  { defaultValue: '---', text: 'Cruise', loc: 15, halfHeight: true, val: 'fuelCruise' },\n  { defaultValue: '---', text: 'Extra', loc: 16, halfHeight: true, val: 'fuelExtra' },\n  { defaultValue: '', hasTotal: true, totalComputeFunc: sum, text: 'Total', loc: 17, halfHeight: true, val: 'fuelTotal', readOnly: true, isComputed: true, computeFrom: ['fuelStartTakeoff', 'fuelClimb', 'fuelCruise', 'fuelExtra'], computeFunc: sum }\n]\n\nfunction UpperBox ({ className, cruiseAlt, cruiseKTAS, legs, moveRow, setLegs, removeRow, showRowEditor, setCruiseAlt, setCruiseKTAS }) {\n  const [focusedBox, setFocusedBox] = useState('')\n\n  const topRow = {\n    cruiseAlt: {\n      label: 'Cruise Altitude',\n      loc: 'span 7 / 8',\n      setValFunc: setCruiseAlt,\n      val: cruiseAlt\n    },\n    cruiseKTAS: {\n      label: 'Cruise KTAS',\n      loc: 'span 3 / 11',\n      setValFunc: setCruiseKTAS,\n      val: cruiseKTAS\n    }\n  }\n  const onTextFieldSubmit = (val, valHeader, row, underlyingVal, underlyingValHeader) => {\n    const newLegs = JSON.parse(JSON.stringify(legs))\n    newLegs[row][valHeader] = val\n    if (!!underlyingVal && !!underlyingValHeader) {\n      newLegs[row][underlyingValHeader] = underlyingVal\n    }\n    setLegs(newLegs)\n  }\n  return (\n    <div className={ `upperBox ${className}` }>\n      {\n        Object.values(topRow).map(topRowHeader =>\n          <TextField\n            defaultValue={ topRowHeader.val }\n            editableFieldStyle={ { gridRow: 1, gridColumn: topRowHeader.loc } }\n            focused={ focusedBox === `1/${topRowHeader.loc}` }\n            key={ `toprow-${topRowHeader.label}` }\n            onClickAway={ val => {\n              setFocusedBox('')\n              topRowHeader.setValFunc(val)\n            } }\n            onEnterPressed={ val => {\n              setFocusedBox('')\n              topRowHeader.setValFunc(val)\n            }}\n            onFocus={ () => setFocusedBox(`1/${topRowHeader.loc}`) }\n            onTabPressed={ () => setFocusedBox(`1/${topRowHeader.loc}`)}\n            unfocusedContent={\n              <Fragment>\n                { topRowHeader.label }\n                <span className={ 'centerText normalText' }>{ topRowHeader.val }</span>\n              </Fragment>\n\n            }\n            unfocusedWrapperClass={ 'topLeftText thickBorder cell cellHover' }\n            unfocusedWrapperStyle={ { gridRow: 1, gridColumn: topRowHeader.loc } }\n            usesUnderlyingValue={ false }\n          />\n        )\n      }\n      <div className={ 'thickBorder cell centerText'} style={ { gridRow: 1, gridColumn: 'span 7 / 18' } }>\n        <span className={ 'topLeftText' }>Heading</span>\n        <span style={ { display: 'inline-flex', justifyContent: 'space-evenly', width: '100%' } }>\n          { legs.map((l, idx) =>\n            <span key={ `upperMagHdg-${idx}` }>\n              <span>{ `Leg ${idx + 1}: ` }</span>\n              <span className={ 'boldText'} >{ capHeading(l.magHdg)?.toString().padStart(3, '0') }&#176;</span>\n            </span>\n          ) }\n        </span>\n      </div>\n      {\n        upperBoxHeaders.map((header, idx) =>\n          <div key={ `upperHeaders-${header.val}` } style={ { gridRow: 2, gridColumn: header.loc } }>\n            { header.halfHeight &&\n                            <HalfHeightHeader gridRow={ 2 } gridColumn={ header.loc } cellText={ header.text } sectionName={ header.sectionName }/>\n            }\n            {\n              !header.halfHeight &&\n                                <NormalHeightHeader text={ header.text }/>\n            }\n          </div>\n        )\n      }\n      {\n        legs.map((leg, rowIdx) =>\n          <Fragment key={ `upperBoxFrag=${rowIdx}` }>\n            {\n              upperBoxHeaders.map((h, colIdx) =>\n                <Cell\n                  colNum={ colIdx }\n                  focused={ focusedBox === `${rowIdx}/${colIdx}` }\n                  header={ h }\n                  headers={ upperBoxHeaders }\n                  key={ `upperLegs-${rowIdx}${colIdx}` }\n                  onTextFieldSubmit={ onTextFieldSubmit }\n                  rowNum={ rowIdx }\n                  rows={ legs }\n                  setFocusedCell={ setFocusedBox }\n                />\n              )\n            }\n            {\n              showRowEditor &&\n                            <RowEditor\n                              moveRow={ moveRow }\n                              removeRow={ removeRow }\n                              rowIndex={ rowIdx }\n                              rows={ legs }\n                            />\n            }\n          </Fragment>\n        )\n      }\n      {\n        upperBoxHeaders.map(header =>\n          header.hasTotal && header.totalComputeFunc &&\n                    <div\n                      className={ 'normalBorder centerText cell italicText' }\n                      key={ `upperTotals-${header.val}`}\n                      style={ { gridRow: 3 + legs.length, gridColumn: header.loc } }\n                    >\n                      { computeTotalCellValue(header, legs) }\n                    </div>\n        )\n      }\n    </div>\n  )\n}\nUpperBox.defaultProps = {\n  origin: 'Plymouth, MA (PYM)',\n  destination: 'BLock Island, RI (KBID)'\n}\n\nUpperBox.propTypes = {\n  className: PropTypes.string,\n  cruiseAlt: PropTypes.string,\n  cruiseKTAS: PropTypes.string,\n  legs: PropTypes.arrayOf(PropTypes.object),\n  moveRow: PropTypes.func,\n  setLegs: PropTypes.func,\n  removeRow: PropTypes.func,\n  showRowEditor: PropTypes.bool,\n  setCruiseAlt: PropTypes.func,\n  setCruiseKTAS: PropTypes.func\n}\n\nexport default UpperBox\n\nexport function TwoCellsWithHeader ({ cell1Title, cell1Value, cell2Title, cell2Value, header, setCell1Value, setCell2Value }) {\n  return (\n    <Fragment>\n      <div className={ 'normalHeader boldText thickBorder centerText bottomBorder' } style={ { gridColumn: 'span 2 / 12', gridRow: 1 } }>\n        { header }\n      </div>\n      <div className={ 'flex spaceAround borderLeft borderRight borderBottom' } style={ { gridRow: 2, gridColumn: 'span 2 / 12', bottom: 0 } }>\n        <div className={ 'flex column borderRight' } style={ { width: '50%' } }>\n          <span className={ 'topLeftText' }>{ cell1Title }</span>\n          <TimePicker\n            id=\"time-picker\"\n            value={ cell1Value }\n            onChange={ time => setCell1Value(time) }\n          />\n        </div>\n        <div className={'flex column'} style={{ gridRow: 2, gridColumn: 'span 2 / 12', width: '50%' }}>\n          <span className={'topLeftText'}>{ cell2Title }</span>\n          <TimePicker\n            id=\"time-picker\"\n            value={ cell2Value }\n            onChange={ time => setCell2Value(time) }\n          />\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n\nTwoCellsWithHeader.propTypes = {\n  cell1Title: PropTypes.string,\n  cell1Value: PropTypes.string,\n  cell2Title: PropTypes.string,\n  cell2Value: PropTypes.string,\n  header: PropTypes.string,\n  setCell1Value: PropTypes.func,\n  setCell2Value: PropTypes.func\n}\n\nexport function HalfHeightHeader ({ cellText, gridColumn, gridRow, sectionName }) {\n  return (\n    <Fragment>\n      <div\n        className={ `halfHeightHeader thickBorderBottom thickBorderTop ${sectionName && 'borderLeft'} italicText` }\n        style={ { gridRow, gridColumn } }\n      >\n        { sectionName }\n      </div>\n      <div className={ 'halfHeightHeader borderRight thickBorderLeft centerText boldText italicText' }>\n        { cellText }\n      </div>\n    </Fragment>\n  )\n}\n\nHalfHeightHeader.propTypes = {\n  cellText: PropTypes.string,\n  gridColumn: PropTypes.number,\n  gridRow: PropTypes.number,\n  sectionName: PropTypes.string\n}\n\nexport function NormalHeightHeader ({ text }) {\n  return (\n    <div className={ 'normalHeader thickBorder centerText boldText' }>\n      { text }\n    </div>\n  )\n}\n\nNormalHeightHeader.propTypes = {\n  text: PropTypes.string\n}\n","import React, { useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport SaveIcon from '@material-ui/icons/Save'\nimport './ActionsBar.css'\nimport IconButton from '@material-ui/core/IconButton'\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd'\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen'\nimport EditIcon from '@material-ui/icons/Edit'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff'\nimport AddLocationIcon from '@material-ui/icons/AddLocation'\nimport { downloadBlobAsFile } from './fileUtils'\nimport LowPriorityIcon from '@material-ui/icons/LowPriority'\nimport html2canvas from 'html2canvas'\nimport ImageIcon from '@material-ui/icons/Image'\nimport DonutSmallIcon from '@material-ui/icons/DonutSmall'\n\nconst ActionsBar = ({ addEmptyCheckpoint, addEmptyLeg, generateFile, showCheckpointEditor, checkpointEditorVisible, loadFakeData, loadFlightPlan, reverseFlightPlan, setActionBarVisible }) => {\n  const inputFile = useRef(null)\n  return (\n    <footer className={ 'bar' }>\n      <Tooltip title={ 'By Aaron Kaplowitz, 2020' }>\n        <div className={ 'logo' }>\n                    FlightPlanJS\n        </div>\n      </Tooltip>\n\n      <Tooltip title={ checkpointEditorVisible ? 'Cancel' : 'Move/Remove Rows' }>\n        <IconButton onClick={ showCheckpointEditor }>\n          {\n            !checkpointEditorVisible && <EditIcon/>\n          }\n          {\n            checkpointEditorVisible && <HighlightOffIcon/>\n          }\n        </IconButton>\n      </Tooltip>\n      <Tooltip title={ 'Add Leg' }>\n        <IconButton onClick={ addEmptyLeg }>\n          <PlaylistAddIcon/>\n        </IconButton>\n      </Tooltip>\n      <Tooltip title={ 'Add Checkpoint' }>\n        <IconButton onClick={ addEmptyCheckpoint }>\n          <AddLocationIcon/>\n        </IconButton>\n      </Tooltip>\n      <Tooltip title={ 'Save Plan' }>\n        <IconButton onClick={ () => {\n          const { blob, fileName } = generateFile()\n          downloadBlobAsFile(blob, fileName)\n        } }>\n          <SaveIcon/>\n        </IconButton>\n      </Tooltip>\n      <input type={ 'file' } onChange={ (e) => {\n        const files = e.target.files\n        if (files.length === 0 || files.length > 1) {\n          console.error('wrong number of files uploaded')\n          return\n        }\n        files[0].text().then(data => loadFlightPlan(JSON.parse(data)))\n      } } ref={ inputFile } style={ { display: 'none' } }/>\n      <Tooltip title={ 'Open Plan' }>\n        <IconButton onClick={ () => inputFile.current.click() }>\n          <FolderOpenIcon/>\n        </IconButton>\n      </Tooltip>\n      <Tooltip title={ 'Reverse Plan' }>\n        <IconButton onClick={ reverseFlightPlan }>\n          <LowPriorityIcon/>\n        </IconButton>\n      </Tooltip>\n      <Tooltip title={ 'Generate Downloadable Image' }>\n        <IconButton onClick={ () => {\n          const prevHeight = document.body.scrollHeight\n          setActionBarVisible(false)\n          window.setTimeout(() => {\n            html2canvas(document.body).then(function (canvas) {\n              document.body.appendChild(canvas)\n              setActionBarVisible(true, canvas)\n              window.scrollTo({ behavior: 'smooth', top: prevHeight })\n            })\n          }, 200)\n        } }>\n          <ImageIcon/>\n        </IconButton>\n      </Tooltip>\n      <Tooltip title={ 'Populate Mock Data' }>\n        <IconButton onClick={ loadFakeData }>\n          <DonutSmallIcon/>\n        </IconButton>\n      </Tooltip>\n    </footer>\n  )\n}\n\nActionsBar.propTypes = {\n  addEmptyCheckpoint: PropTypes.func,\n  addEmptyLeg: PropTypes.func,\n  generateFile: PropTypes.func,\n  showCheckpointEditor: PropTypes.func,\n  checkpointEditorVisible: PropTypes.bool,\n  loadFakeData: PropTypes.func,\n  loadFlightPlan: PropTypes.func,\n  reverseFlightPlan: PropTypes.func,\n  setActionBarVisible: PropTypes.func\n}\n\nexport default ActionsBar\n","export const generateFile = (cruiseAltitude, cruiseKTAS, legs, checkpoints, frequencies, notes, origin, destination) =>\n  ({\n    blob: new Blob(\n      [JSON.stringify({ cruiseAltitude, cruiseKTAS, legs, checkpoints, frequencies, notes, origin, destination })],\n      { type: 'application/json' }\n    ),\n    fileName: `flightplan-${origin.replace(/\\s/g, '')}-to-${destination.replace(/\\s/g, '')}`\n  })\n\nexport const downloadBlobAsFile = (blob, filename = `flightplan-${new Date().toString()}`) => {\n  const contentType = 'application/octet-stream'\n  if (!blob) {\n    console.error(' No data')\n    return\n  }\n\n  const e = document.createEvent('MouseEvents')\n  const a = document.createElement('a')\n\n  a.download = filename\n  a.href = window.URL.createObjectURL(blob)\n  a.dataset.downloadurl = [contentType, a.download, a.href].join(':')\n  e.initMouseEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null)\n  a.dispatchEvent(e)\n}\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport './Plan.css'\n\nimport { NormalHeightHeader, TwoCellsWithHeader } from './UpperBox'\nimport TextField from './TextField'\n\nconst OriginDestinationRow = ({ destination, origin, setDestination, setOrigin, setTakeoffTimeAct, setTakeoffTimeEst, takeoffTimeEst, takeoffTimeAct }) => {\n  const [focusedBox, setFocusedBox] = useState(undefined)\n  const headers = [\n    { defaultValue: '', text: 'Origin', loc: 'span 4 / 5', val: 'origin' },\n    { defaultValue: '', text: 'Destination', loc: 'span 4 / 9', val: 'destination' }\n  ]\n\n  const onTextFieldSubmit = (val, col) => {\n    switch (col) {\n      case headers[0].val:\n        setOrigin(val)\n        break\n      case headers[1].val:\n        setDestination(val)\n        break\n      default: break\n    }\n  }\n  return (\n    <div className={ 'originDestinationRow' }>\n      {\n        headers.map((header) =>\n          <div key={ `origdest-headers-${header.val}`} style={ { gridRow: 1, gridColumn: header.loc } }>\n            <NormalHeightHeader text={ header.text }/>\n          </div>\n        )\n      }\n      {\n        headers.map((header, headerIdx) =>\n          <TextField\n            defaultValue={ header.val === 'origin' ? origin : destination }\n            editableFieldStyle={ { gridRow: 2, gridColumn: header.loc } }\n            focused={ focusedBox === headerIdx }\n            key={ header.val }\n            onEnterPressed={ (val) => {\n              onTextFieldSubmit(val, header.val)\n              setFocusedBox(undefined)\n            } }\n            onFocus={ () => setFocusedBox(headerIdx) }\n            onClickAway={ (val) => {\n              onTextFieldSubmit(val, header.val)\n              setFocusedBox(undefined)\n            } }\n            onTabPressed={ (val, shiftPressed) => {\n              onTextFieldSubmit(val, header.val)\n              if (headerIdx === 0) {\n                setFocusedBox(shiftPressed ? undefined : 1)\n              } else if (headerIdx === headers.length - 1) {\n                setFocusedBox(shiftPressed ? headerIdx - 1 : undefined)\n              } else {\n                setFocusedBox(shiftPressed ? headerIdx - 1 : headerIdx + 1)\n              }\n            } }\n            unfocusedContent={ header.val === 'origin' ? origin : destination }\n            unfocusedWrapperClass={ 'normalBorder centerText thickCell' }\n            unfocusedWrapperStyle={ { gridRow: 2, gridColumn: header.loc } }\n            usesUnderlyingValue={ false }\n          />\n        )\n      }\n\n      <TwoCellsWithHeader\n        cell1Title={ 'Est' }\n        cell1Value={ takeoffTimeEst }\n        cell2Value={ takeoffTimeAct }\n        cell2Title={ 'Actual' }\n        header={ 'Takeoff Times' }\n        setCell1Value={ setTakeoffTimeEst }\n        setCell2Value={ setTakeoffTimeAct }\n      />\n    </div>\n  )\n}\n\nOriginDestinationRow.propTypes = {\n  destination: PropTypes.string,\n  origin: PropTypes.string,\n  setDestination: PropTypes.func,\n  setOrigin: PropTypes.func,\n  setTakeoffTimeAct: PropTypes.func,\n  setTakeoffTimeEst: PropTypes.func,\n  takeoffTimeEst: PropTypes.object,\n  takeoffTimeAct: PropTypes.object\n}\n\nexport default OriginDestinationRow\n","export const legs = [\n  {\n    name: 'KPYM -> Pt Judith',\n    windHdg: 120,\n    windSpd: 12,\n    trueCourse: 200,\n    magVariance: 14,\n    magCourse: 214,\n    windCrctAngle: 1,\n    groundSpeed: 95,\n    distance: 45,\n    fuelStartTakeoff: 1.1,\n    fuelClimb: 2,\n    fuelCruise: 7\n  },\n  {\n    name: 'Pt Judith -> KBID',\n    windHdg: 130,\n    windSpd: 10,\n    trueCourse: 180,\n    magVariance: 14,\n    magCourse: 194,\n    windCrctAngle: 3,\n    groundSpeed: 98,\n    distance: 13,\n    fuelCruise: 0.6,\n    fuelExtra: 4\n  }\n]\n\nexport const destination = 'Block Island (BID)'\n\nexport const origin = 'Plymouth (PYM)'\n\nexport const takeoffTimeEst = new Date().setHours(12, 30)\n\nexport const frequencies = {\n  departureWx: 'PYM 135.625',\n  departureCTAF: 'PYM 125.75',\n  enroute1: 'BOS 124.1',\n  enroute2: '',\n  destinationWx: 'BID 119.4',\n  destinationCTAF: 'BID 123.0',\n  other: 'PVD 123.9'\n}\n\nexport const checkpoints = [\n  {\n    description: 'Passing EWB aprt 9pm 2mi. Bogs off right 2-5mi',\n    distPtToPt: 17,\n    remarks: 'I dunno',\n    leg: 0\n  },\n  {\n    description: 'Over fall river',\n    distPtToPt: 12,\n    remarks: 'I still dunno',\n    leg: 1\n  }\n]\n","import createMuiTheme from '@material-ui/core/styles/createMuiTheme'\n\nexport const defaultLightTheme = createMuiTheme({\n  overrides: {\n    MuiInputBase: {\n      input: {\n        '&:hover': {\n          cursor: 'pointer',\n          backgroundColor: '#f6f6f6'\n        }\n      }\n    },\n    MuiInput: {\n      underline: {\n        '&:before': {\n          content: undefined,\n          top: 20\n        }\n      }\n    }\n  }\n})\n","import React, { useState } from 'react'\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers'\nimport MomentUtils from '@date-io/moment'\nimport './App.css'\nimport UpperBox, { upperBoxHeaders } from './UpperBox'\nimport LowerBox from './LowerBox'\nimport ActionsBar from './ActionsBar'\nimport { computeRowCellValues } from './computeFuncs'\nimport { calculateLowerBoxCellValues, moveItemInArray, reverseFlightPlan } from './utils'\nimport OriginDestinationRow from './OriginDestinationRow'\nimport { generateFile } from './fileUtils'\nimport * as pymToBIDFakeData from './mockdata/pym_bid'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport { defaultLightTheme } from './themes'\n\nconst emptyLeg = { magVariance: 14 }\n\nconst App = () => {\n  const [actionBarVisible, setActionBarVisible] = useState(true)\n  const [checkpoints, setCheckpoints] = useState([{ leg: 0 }])\n  const [destination, setDestination] = useState('')\n  const [origin, setOrigin] = useState('')\n  const [takeoffTimeEst, setTakeoffTimeEst] = useState(null)\n  const [takeoffTimeAct, setTakeoffTimeAct] = useState(null)\n  const [legs, setLegs] = useState([emptyLeg])\n  const [cruiseAlt, setCruiseAlt] = useState('')\n  const [cruiseKTAS, setCruiseKTAS] = useState('')\n  const [showRowEditor, setShowRowEditor] = useState(false)\n  const [frequencies, setFrequencies] = useState({})\n\n  return (\n    <ThemeProvider theme={ defaultLightTheme }>\n      <MuiPickersUtilsProvider utils={ MomentUtils }>\n        <div className=\"App\">\n          <div className={ 'planWrapper'}>\n            <UpperBox\n              className={ 'gridSeparator' }\n              cruiseAlt={ cruiseAlt }\n              cruiseKTAS={ cruiseKTAS }\n              legs={ legs }\n              moveRow={ (oldIndex, newIndex) => {\n                setLegs(oldLegs => [...moveItemInArray(oldLegs, oldIndex, newIndex)])\n              } }\n              setCruiseAlt={ setCruiseAlt }\n              setCruiseKTAS={ setCruiseKTAS }\n              setLegs={ (legs) => {\n                const newLegs = computeRowCellValues(upperBoxHeaders, legs)\n                setLegs(newLegs)\n              } }\n              showRowEditor={ showRowEditor }\n              removeRow={ index => setLegs(l => [...l.slice(0, index), ...l.slice(index + 1)]) }\n            />\n            <OriginDestinationRow\n              destination={ destination }\n              origin={ origin }\n              setDestination={ setDestination}\n              setOrigin={ setOrigin }\n              takeoffTimeAct={ takeoffTimeAct }\n              setTakeoffTimeAct={ setTakeoffTimeAct }\n              takeoffTimeEst={ takeoffTimeEst }\n              setTakeoffTimeEst={ setTakeoffTimeEst }\n            />\n            <LowerBox\n              checkpoints={ checkpoints }\n              frequencies={ frequencies }\n              legs={ legs }\n              moveRow={ (oldIndex, newIndex) => {\n                setCheckpoints(oldCheckpoints => [...moveItemInArray(oldCheckpoints, oldIndex, newIndex)])\n              } }\n              removeRow={ index => setCheckpoints(c => [...c.slice(0, index), ...c.slice(index + 1)]) }\n              setCheckpoints={ (c) => setCheckpoints(calculateLowerBoxCellValues(c, legs, takeoffTimeEst)) }\n              setFrequencies={ f => setFrequencies(oldFreqs => ({ ...oldFreqs, ...f })) }\n              showRowEditor={ showRowEditor }\n              totalMiles={ 2 }\n            />\n          </div>\n          {\n            actionBarVisible && <ActionsBar\n              addEmptyCheckpoint={ () => setCheckpoints([...checkpoints, ...[{ leg: legs.length - 1 }]]) }\n              addEmptyLeg={ () => setLegs(computeRowCellValues(upperBoxHeaders, [...legs, emptyLeg])) }\n              generateFile={ () => generateFile(cruiseAlt, cruiseKTAS, legs, checkpoints, [], [], origin, destination) }\n              loadFakeData={ () => {\n                setLegs(computeRowCellValues(upperBoxHeaders, pymToBIDFakeData.legs))\n                setCheckpoints(calculateLowerBoxCellValues(pymToBIDFakeData.checkpoints, pymToBIDFakeData.legs, pymToBIDFakeData.takeoffTimeEst))\n                setDestination(pymToBIDFakeData.destination)\n                setOrigin(pymToBIDFakeData.origin)\n                setTakeoffTimeEst(pymToBIDFakeData.takeoffTimeEst)\n                setFrequencies(pymToBIDFakeData.frequencies)\n              }}\n              loadFlightPlan={ ({ cruiseAltitude, cruiseKTAS, legs, checkpoints, frequencies, notes, origin, destination }) => {\n                setCruiseAlt(cruiseAltitude)\n                setCruiseKTAS(cruiseKTAS)\n                setLegs(legs)\n                setCheckpoints(checkpoints)\n                setOrigin(origin)\n                setDestination(destination)\n              } }\n              showCheckpointEditor={ () => setShowRowEditor(oldVal => !oldVal) }\n              checkpointEditorVisible={ showRowEditor }\n              reverseFlightPlan={ () => {\n                const reversed = reverseFlightPlan(legs, checkpoints, frequencies, origin, destination)\n                setFrequencies(reversed.frequencies)\n                setCheckpoints(reversed.checkpoints)\n                setLegs(computeRowCellValues(upperBoxHeaders, (reversed.legs)))\n                setOrigin(reversed.origin)\n                setDestination(reversed.destination)\n                setCruiseAlt('')\n                setCruiseKTAS('')\n                setTakeoffTimeAct(null)\n                setTakeoffTimeEst(null)\n              } }\n              setActionBarVisible={ setActionBarVisible }\n            />\n          }\n        </div>\n      </MuiPickersUtilsProvider>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}